# -*- coding: utf-8 -*-
"""redwine.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aQnyzHLKomTWa2Th7cpbzm8OtNqeIfa8

# Libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import scipy.stats as stats
import statsmodels.api as sm
from statsmodels.formula.api import ols

"""# Import Dataset"""

df = pd.read_csv(r'https://github.com/jigsaw1313/data-analysis/blob/master/wine%20quality/winequality-red.csv', delimiter=';')
df

"""# First insight of dataset"""

df.info()

df.describe()

"""# EDA

## Feature Distribution
"""

plt.figure(figsize=(10, 6))
sns.boxplot(x='quality', y='alcohol', data=df)
plt.xlabel('Wine Quality')
plt.ylabel('Alcohol Content')
plt.title('Alcohol Content by Wine Quality')
plt.show()

"""## Hist chart for numerical features"""

plt.figure(figsize=(8, 6))
sns.histplot(df['alcohol'], bins=20, kde=True)
plt.xlabel('Alcohol Content')
plt.ylabel('Frequency')
plt.title('Distribution of Alcohol Content')
plt.show()

"""## Correlation Matirx"""

correlation_matrix = df.corr()
plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Correlation Heatmap')
plt.show()

"""# Statistical Analysis

## Summary Statistical
"""

summary_stats = df.describe()
print("Summary Statistics for Numerical Features:")
print(summary_stats)

"""### Distribution of the target variables using summary statistics

Count: There are 1599 observations in the dataset, meaning there are 1599 samples of wine quality data.

Mean: The mean (average) wine quality in the dataset is approximately 5.636, indicating that, on average, the wines in the dataset have a quality score around 5.6.

Standard Deviation (Std): The standard deviation is approximately 0.807, which measures the spread or variability of wine quality scores around the mean. A higher standard deviation suggests more variability in wine quality scores.

Minimum (Min): The minimum wine quality score in the dataset is 3.0, which represents the lowest quality rating in the dataset.

25th Percentile (Q1): The 25th percentile (first quartile) wine quality score is approximately 5.0. This means that 25% of the wines in the dataset have a quality score of 5 or lower.

Median (50th Percentile): The median (middle value when the data is sorted) wine quality score is approximately 6.0. This is the value that separates the higher half from the lower half of the quality scores.

75th Percentile (Q3): The 75th percentile (third quartile) wine quality score is approximately 6.0. This means that 75% of the wines in the dataset have a quality score of 6 or lower.

Maximum (Max): The maximum wine quality score in the dataset is 8.0, which represents the highest quality rating in the dataset. in the dataset.

## median stats
"""

median_stats = df.median()
print("Median for Numerical Features:")
print(median_stats)

"""# calculate mode for each numerical column"""

mode_stats = df.mode().iloc[0]
print("Mode for Numerical Features:")
print(mode_stats)

"""# Variance of numerical column"""

# Calculate the variance for each numerical column
variance_stats = df.var()
print("\nVariance for Numerical Features:")
print(variance_stats)

"""## Correlation matrix"""

# Calculate the correlation matrix
correlation_matrix = df.corr()
print("Correlation Matrix:")
print(correlation_matrix)

"""### In depth Analysis of Correlation Matrixe quality.ith higher wine quality.ated with higher wine quality.

***Fixed Acidity***: This feature has a positive correlation with Citric Acid (0.671703) and Density (0.668047), indicating that as fixed acidity increases, citric acid and density also tend to increase. It has a negative correlation with pH (-0.682978), indicating that as fixed acidity increases, pH tends to decrease.    

***Volatile Acidity***: It has a strong negative correlation with Citric Acid (-0.552496), suggesting that as volatile acidity increases, citric acid tends to decrease. It also has a negative correlation with Quality (-0.390558), meaning that higher volatile acidity is associated with lower wine quality.    

***Citric Acid***: It has a positive correlation with Fixed Acidity (0.671703), Density (0.364947), and Quality (0.226373). Higher citric acid is associated with higher fixed acidity, density, and wine quality.    

***Residual Sugar***: It has a positive correlation with Free Sulfur Dioxide (0.187049) and Total Sulfur Dioxide (0.203028).  

***Chlorides***: It has a positive correlation with Sulphates (0.371260) and a negative correlation with Alcohol (-0.221141).   

***Free Sulfur Dioxide***: It has a positive correlation with Total Sulfur Dioxide (0.667666).    

***Total Sulfur Dioxide***: It has a negative correlation with Alcohol (-0.205654) and Density (0.071269).    

***Density***: It has a negative correlation with Fixed Acidity (-0.113181), Citric Acid (-0.541904), and pH (-0.341699).    

***pH***: It has a negative correlation with Fixed Acidity (-0.682978) and a positive correlation with Volatile Acidity (0.234937).    

***Sulphates***: It has a positive correlation with Chlorides (0.371260) and Quality (0.251397).    

***Alcohol***: It has a positive correlation with Quality (0.476166) and a negative correlation with Density (-0.496180).     

***Quality***: It has a positive correlation with Alcohol (0.476166), indicating that higher alcohol content is associated with higher wine quality.

# Visualization

## histograms or density plots for each numerical feature to visualize their distributions
"""

columns_to_visualize = ['fixed acidity', 'volatile acidity', 'citric acid', 'residual sugar', 'chlorides', 'free sulfur dioxide', 'total sulfur dioxide', 'density', 'pH', 'sulphates', 'alcohol']

for column in columns_to_visualize:
    plt.figure(figsize=(8, 4))
    sns.histplot(data=df, x=column, kde=True)
    plt.title(f'Distribution of {column}')
    plt.xlabel(column)
    plt.ylabel('Frequency')
    plt.show()

"""##  box plots to identify outliers and visualize feature distributions:"""

for column in columns_to_visualize:
    plt.figure(figsize=(8, 4))
    sns.boxplot(data=df, x=column)
    plt.title(f'Box Plot of {column}')
    plt.xlabel(column)
    plt.show()

"""### Plot bar charts or count plots to visualize the distribution of wine quality ratings:"""

plt.figure(figsize=(8, 4))
sns.countplot(data=df, x='quality')
plt.title('Distribution of Wine Quality Ratings')
plt.xlabel('Quality')
plt.ylabel('Count')
plt.show()

"""### pairwise relationships between features using scatter plots and color them by wine quality"""

sns.pairplot(data=df, hue='quality', markers=["o", "s", "D", "X", "P", "^"], palette="Set1")
plt.title('Pairwise Relationships Between Features by Wine Quality')
plt.show()

"""# Rename columns"""

df.columns = ['fixed_acidity', 'volatile_acidity', 'citric_acid', 'residual_sugar',
       'chlorides', 'free_sulfur_dioxide', 'total_sulfur dioxide', 'density',
       'pH', 'sulphates', 'alcohol', 'quality']

"""# hypotheses test

### quality ~ fixed_acidity
"""

formula = 'quality ~ C(fixed_acidity)'

# Fit the OLS model
model = ols(formula, data=df).fit()

# Perform ANOVA
anova_table = sm.stats.anova_lm(model, typ=2)

# Print the ANOVA table
print(anova_table)

# Check for significant differences
alpha = 0.05
p_value = anova_table['PR(>F)'][0]

if p_value < alpha:
    print(f'There are significant differences in wine quality based on fixed acidity (p-value = {p_value}).')
else:
    print(f'There are no significant differences in wine quality based on fixed acidity (p-value = {p_value}).')

"""### quality ~ residual sugar"""

formula = 'quality ~ C(residual_sugar)'

# Fit the OLS model
model = ols(formula, data=df).fit()

# Perform ANOVA
anova_table = sm.stats.anova_lm(model, typ=2)

# Print the ANOVA table
print(anova_table)

# Check for significant differences
alpha = 0.05
p_value = anova_table['PR(>F)'][0]

if p_value < alpha:
    print(f'There are significant differences in wine quality based on residual sugar (p-value = {p_value}).')
else:
    print(f'There are no significant differences in wine quality based on residual sugar (p-value = {p_value}).')

"""### quality ~ pH"""

formula = 'quality ~ C(pH)'

# Fit the OLS model
model = ols(formula, data=df).fit()

# Perform ANOVA
anova_table = sm.stats.anova_lm(model, typ=2)

# Print the ANOVA table
print(anova_table)

# Check for significant differences
alpha = 0.05
p_value = anova_table['PR(>F)'][0]

if p_value < alpha:
    print(f'There are significant differences in wine quality based on pH (p-value = {p_value}).')
else:
    print(f'There are no significant differences in wine quality based on pH (p-value = {p_value}).')

