# Author : Jigsaw1313 | Mohammadreza Mohammadi

# -*- coding: utf-8 -*-
"""covid-19 Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_dxzkJGyRWUch7kOmJFMRMwfzXwtb4X-

"""

# Import Libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""# Import dataset and first insight"""

# import dataset
df = pd.read_csv('__ 004 Covid-19-data.csv')

# check datafram
df.head()

# check columns and datatypes
df.info()

# check values of each columns
df.count()

# there are NaN values on State column

# check sum of NaN values of each column
df.isnull().sum()

"""# Analyze Dataframe"""

# check the heatmap of missing values
sns.heatmap(df.isnull())
plt.show()

"""### Check the number of Confirmed, Deaths and Recovered cases in each Region"""

df.groupby('Region').sum()

# check first 20 region
df.groupby('Region').sum().head(20)

# check only Confirmed values
df.groupby('Region')['Confirmed'].sum().to_frame()

# sort by number of Confirmed
df.groupby('Region')['Confirmed'].sum().sort_values(ascending = False).to_frame()

# check only Confirmed & Recovered values
df.groupby('Region')[['Confirmed', 'Recovered']].sum()

"""### Removing all the records where Confired Cases is less than 10"""

# check df
df.head(3)

# filter df by number of Confirmed cases
df[(df['Confirmed'] < 10)]

# remove confirmed cases where number is less than 10
df = df[~(df['Confirmed'] < 10)]

# check df
df.info()

# check and confirme df to be sure that Confirmed cases less than 10 are removed
df['Confirmed'].sort_values(ascending = True).to_frame()

"""### In which Region, maximum number of Confimred cases were recorded"""

df.head(3)

df.groupby('Region')['Confirmed'].sum().sort_values(ascending = False).head(20)

"""### in Which Region Minimum of Deaths cases were recorded"""

df.groupby('Region')['Deaths'].sum().sort_values(ascending = True).head(30)

"""### Number of Confirmed, Deaths & Recovered were reported from US & Iran"""

# filter country
df[(df['Region'] == 'US')]

# Another example of Filtering by country
df[(df['Region'] == 'Iran')]

"""### Sort df by Confirmed cases in ascending order"""

df.sort_values(by = 'Confirmed', ascending = True)

"""### Sort df by Recovered cases in descending order"""

df.sort_values(by = 'Recovered', ascending=False)

